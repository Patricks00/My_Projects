//8 Queens Game Board
//Past School Assignment
//Basically It Display how 8 Queens Can be display on a 8x8 board

public class MyClass {
    public static void main(String args[]) {
        System.out.println("Hello world");
        Chessboard board = new Chessboard();
        board.start();
    }
    
}



public class Chessboard {
    
    private static int board[][];
    private int numQueens;
    
    
    public Chessboard(){ //filling the board places with 0's.
        numQueens = 0;
        board = new int [8][8];
        for(int j = 0; j<0; j++)
        {
            for(int k = 0; k<0; k++)
            {
                board[j][k] = 0;
            }   
        }
    }
    
    public int getNumQueens()
    {
        return numQueens;
    }
    
    public void start()
    {
        solve(0);
    }
    
    public boolean solve(int numQueens)
    {
        if(numQueens == 8) // if all the Queens Have been place on board
        {
            System.out.println("Done");
            this.printBoard();
            return true;
        }
        else{
          
            for(int j=0; j<8; j++)
            {
                for (int k=0; k<8; k++)
                {
                    if(validmove(j,k) ==0){
                        this.placeQueen(j,k,0);
                        numQueens++;
                        if(solve(numQueens)){
                            return true;
                        }
                        else{
                            this.placeQueen(j,k,1);
                            numQueens--;
                        }
                    }
                }
            }
        }
        return false;
    }
    
    public int validmove(int x, int y)
    {
        for (int j=0; j<8; j++)
        {
             if(get(x,j) == 1)
             {
                 return -1;
             }
             if(get(j,y) ==1)
             {
                 return -1;
             }
        }
        //check diag
        for (int j=0; j<8; j++)
        {
             if(get(x-j, y-j) == 1)
             {
                 return -1;
             }
             if(get(x-j, y+j) ==1)
             {
                 return -1;
             }
             if(get(x+j, y+j) ==1)
             {
                 return -1;
             }
        }
        return 0;
    }
    
    public int placeQueen(int x, int y, int type){
        if(type ==0)
        {
            board[x][y] =1;
            numQueens++;
            return 0;
        }
        else if(type==1)
        {
            board[x][y]=0;
            return 0;
        }
        System.out.println("wrong type");
        return -3;
    }
    
    public static int get(int x, int y)
    {
        if(x <0 || y<0 || x>7 || y>7)
        {
        //    systrem.out.println("Not Right");
            return -1;
        }
        return board[x][y];
    }
  
    public void printBoard()
    {
        for (int j=0; j<8; j++)
        {
            for (int k=0; k<8; k++)
                {
                    System.out.print(this.get(j,k)+ " ");
                }
                System.out.println("");
        }
    }
}